|SimpleFSM
clk => debounce:switch1.clk
clk => reg[0]~reg0.CLK
clk => reg[1]~reg0.CLK
clk => reg[2]~reg0.CLK
clk => reg[3]~reg0.CLK
clk => hex_value[0].CLK
clk => hex_value[1].CLK
clk => hex_value[2].CLK
clk => hex_value[3].CLK
clk => btn4pressed.CLK
clk => btn3pressed.CLK
clk => btn2pressed.CLK
clk => btn1pressed.CLK
clk => delayed_sw4.CLK
clk => delayed_sw3.CLK
clk => delayed_sw2.CLK
clk => delayed_sw1.CLK
clk => debounce:switch2.clk
clk => debounce:switch3.clk
clk => debounce:switch4.clk
clk => state~1.DATAIN
rst => debounce:switch1.rst
rst => debounce:switch2.rst
rst => debounce:switch3.rst
rst => debounce:switch4.rst
rst => btn4pressed.ACLR
rst => btn3pressed.ACLR
rst => btn2pressed.ACLR
rst => btn1pressed.ACLR
rst => delayed_sw4.PRESET
rst => delayed_sw3.PRESET
rst => delayed_sw2.PRESET
rst => delayed_sw1.PRESET
rst => hex_value[0].ACLR
rst => hex_value[1].ACLR
rst => hex_value[2].ACLR
rst => hex_value[3].ACLR
rst => state~3.DATAIN
rst => reg[0]~reg0.ENA
rst => reg[3]~reg0.ENA
rst => reg[2]~reg0.ENA
rst => reg[1]~reg0.ENA
sw1 => debounce:switch1.sw
sw2 => debounce:switch2.sw
sw3 => debounce:switch3.sw
sw4 => debounce:switch4.sw
seg[0] <= hex_to_7seg:seg0.seven_seg[0]
seg[1] <= hex_to_7seg:seg0.seven_seg[1]
seg[2] <= hex_to_7seg:seg0.seven_seg[2]
seg[3] <= hex_to_7seg:seg0.seven_seg[3]
seg[4] <= hex_to_7seg:seg0.seven_seg[4]
seg[5] <= hex_to_7seg:seg0.seven_seg[5]
seg[6] <= hex_to_7seg:seg0.seven_seg[6]
reg[0] <= reg[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg[1] <= reg[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg[2] <= reg[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg[3] <= reg[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|SimpleFSM|Hex_To_7Seg:seg0
seven_seg[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
seven_seg[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
seven_seg[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
seven_seg[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
seven_seg[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
seven_seg[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
seven_seg[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
hex[0] => Mux0.IN19
hex[0] => Mux1.IN19
hex[0] => Mux2.IN19
hex[0] => Mux3.IN19
hex[0] => Mux4.IN19
hex[0] => Mux5.IN19
hex[0] => Mux6.IN19
hex[1] => Mux0.IN18
hex[1] => Mux1.IN18
hex[1] => Mux2.IN18
hex[1] => Mux3.IN18
hex[1] => Mux4.IN18
hex[1] => Mux5.IN18
hex[1] => Mux6.IN18
hex[2] => Mux0.IN17
hex[2] => Mux1.IN17
hex[2] => Mux2.IN17
hex[2] => Mux3.IN17
hex[2] => Mux4.IN17
hex[2] => Mux5.IN17
hex[2] => Mux6.IN17
hex[3] => Mux0.IN16
hex[3] => Mux1.IN16
hex[3] => Mux2.IN16
hex[3] => Mux3.IN16
hex[3] => Mux4.IN16
hex[3] => Mux5.IN16
hex[3] => Mux6.IN16


|SimpleFSM|debounce:switch1
clk => output~reg0.CLK
clk => flipflops[0].CLK
clk => flipflops[1].CLK
clk => \main_porc:count[0].CLK
clk => \main_porc:count[1].CLK
clk => \main_porc:count[2].CLK
clk => \main_porc:count[3].CLK
clk => \main_porc:count[4].CLK
clk => \main_porc:count[5].CLK
clk => \main_porc:count[6].CLK
clk => \main_porc:count[7].CLK
clk => \main_porc:count[8].CLK
clk => \main_porc:count[9].CLK
clk => \main_porc:count[10].CLK
clk => \main_porc:count[11].CLK
clk => \main_porc:count[12].CLK
clk => \main_porc:count[13].CLK
clk => \main_porc:count[14].CLK
clk => \main_porc:count[15].CLK
clk => \main_porc:count[16].CLK
clk => \main_porc:count[17].CLK
clk => \main_porc:count[18].CLK
clk => \main_porc:count[19].CLK
clk => \main_porc:count[20].CLK
rst => output~reg0.PRESET
rst => flipflops[0].PRESET
rst => flipflops[1].PRESET
rst => \main_porc:count[20].ENA
rst => \main_porc:count[19].ENA
rst => \main_porc:count[18].ENA
rst => \main_porc:count[17].ENA
rst => \main_porc:count[16].ENA
rst => \main_porc:count[15].ENA
rst => \main_porc:count[14].ENA
rst => \main_porc:count[13].ENA
rst => \main_porc:count[12].ENA
rst => \main_porc:count[11].ENA
rst => \main_porc:count[10].ENA
rst => \main_porc:count[9].ENA
rst => \main_porc:count[8].ENA
rst => \main_porc:count[7].ENA
rst => \main_porc:count[6].ENA
rst => \main_porc:count[5].ENA
rst => \main_porc:count[4].ENA
rst => \main_porc:count[3].ENA
rst => \main_porc:count[2].ENA
rst => \main_porc:count[1].ENA
rst => \main_porc:count[0].ENA
sw => flipflops[0].DATAIN
output <= output~reg0.DB_MAX_OUTPUT_PORT_TYPE


|SimpleFSM|debounce:switch2
clk => output~reg0.CLK
clk => flipflops[0].CLK
clk => flipflops[1].CLK
clk => \main_porc:count[0].CLK
clk => \main_porc:count[1].CLK
clk => \main_porc:count[2].CLK
clk => \main_porc:count[3].CLK
clk => \main_porc:count[4].CLK
clk => \main_porc:count[5].CLK
clk => \main_porc:count[6].CLK
clk => \main_porc:count[7].CLK
clk => \main_porc:count[8].CLK
clk => \main_porc:count[9].CLK
clk => \main_porc:count[10].CLK
clk => \main_porc:count[11].CLK
clk => \main_porc:count[12].CLK
clk => \main_porc:count[13].CLK
clk => \main_porc:count[14].CLK
clk => \main_porc:count[15].CLK
clk => \main_porc:count[16].CLK
clk => \main_porc:count[17].CLK
clk => \main_porc:count[18].CLK
clk => \main_porc:count[19].CLK
clk => \main_porc:count[20].CLK
rst => output~reg0.PRESET
rst => flipflops[0].PRESET
rst => flipflops[1].PRESET
rst => \main_porc:count[20].ENA
rst => \main_porc:count[19].ENA
rst => \main_porc:count[18].ENA
rst => \main_porc:count[17].ENA
rst => \main_porc:count[16].ENA
rst => \main_porc:count[15].ENA
rst => \main_porc:count[14].ENA
rst => \main_porc:count[13].ENA
rst => \main_porc:count[12].ENA
rst => \main_porc:count[11].ENA
rst => \main_porc:count[10].ENA
rst => \main_porc:count[9].ENA
rst => \main_porc:count[8].ENA
rst => \main_porc:count[7].ENA
rst => \main_porc:count[6].ENA
rst => \main_porc:count[5].ENA
rst => \main_porc:count[4].ENA
rst => \main_porc:count[3].ENA
rst => \main_porc:count[2].ENA
rst => \main_porc:count[1].ENA
rst => \main_porc:count[0].ENA
sw => flipflops[0].DATAIN
output <= output~reg0.DB_MAX_OUTPUT_PORT_TYPE


|SimpleFSM|debounce:switch3
clk => output~reg0.CLK
clk => flipflops[0].CLK
clk => flipflops[1].CLK
clk => \main_porc:count[0].CLK
clk => \main_porc:count[1].CLK
clk => \main_porc:count[2].CLK
clk => \main_porc:count[3].CLK
clk => \main_porc:count[4].CLK
clk => \main_porc:count[5].CLK
clk => \main_porc:count[6].CLK
clk => \main_porc:count[7].CLK
clk => \main_porc:count[8].CLK
clk => \main_porc:count[9].CLK
clk => \main_porc:count[10].CLK
clk => \main_porc:count[11].CLK
clk => \main_porc:count[12].CLK
clk => \main_porc:count[13].CLK
clk => \main_porc:count[14].CLK
clk => \main_porc:count[15].CLK
clk => \main_porc:count[16].CLK
clk => \main_porc:count[17].CLK
clk => \main_porc:count[18].CLK
clk => \main_porc:count[19].CLK
clk => \main_porc:count[20].CLK
rst => output~reg0.PRESET
rst => flipflops[0].PRESET
rst => flipflops[1].PRESET
rst => \main_porc:count[20].ENA
rst => \main_porc:count[19].ENA
rst => \main_porc:count[18].ENA
rst => \main_porc:count[17].ENA
rst => \main_porc:count[16].ENA
rst => \main_porc:count[15].ENA
rst => \main_porc:count[14].ENA
rst => \main_porc:count[13].ENA
rst => \main_porc:count[12].ENA
rst => \main_porc:count[11].ENA
rst => \main_porc:count[10].ENA
rst => \main_porc:count[9].ENA
rst => \main_porc:count[8].ENA
rst => \main_porc:count[7].ENA
rst => \main_porc:count[6].ENA
rst => \main_porc:count[5].ENA
rst => \main_porc:count[4].ENA
rst => \main_porc:count[3].ENA
rst => \main_porc:count[2].ENA
rst => \main_porc:count[1].ENA
rst => \main_porc:count[0].ENA
sw => flipflops[0].DATAIN
output <= output~reg0.DB_MAX_OUTPUT_PORT_TYPE


|SimpleFSM|debounce:switch4
clk => output~reg0.CLK
clk => flipflops[0].CLK
clk => flipflops[1].CLK
clk => \main_porc:count[0].CLK
clk => \main_porc:count[1].CLK
clk => \main_porc:count[2].CLK
clk => \main_porc:count[3].CLK
clk => \main_porc:count[4].CLK
clk => \main_porc:count[5].CLK
clk => \main_porc:count[6].CLK
clk => \main_porc:count[7].CLK
clk => \main_porc:count[8].CLK
clk => \main_porc:count[9].CLK
clk => \main_porc:count[10].CLK
clk => \main_porc:count[11].CLK
clk => \main_porc:count[12].CLK
clk => \main_porc:count[13].CLK
clk => \main_porc:count[14].CLK
clk => \main_porc:count[15].CLK
clk => \main_porc:count[16].CLK
clk => \main_porc:count[17].CLK
clk => \main_porc:count[18].CLK
clk => \main_porc:count[19].CLK
clk => \main_porc:count[20].CLK
rst => output~reg0.PRESET
rst => flipflops[0].PRESET
rst => flipflops[1].PRESET
rst => \main_porc:count[20].ENA
rst => \main_porc:count[19].ENA
rst => \main_porc:count[18].ENA
rst => \main_porc:count[17].ENA
rst => \main_porc:count[16].ENA
rst => \main_porc:count[15].ENA
rst => \main_porc:count[14].ENA
rst => \main_porc:count[13].ENA
rst => \main_porc:count[12].ENA
rst => \main_porc:count[11].ENA
rst => \main_porc:count[10].ENA
rst => \main_porc:count[9].ENA
rst => \main_porc:count[8].ENA
rst => \main_porc:count[7].ENA
rst => \main_porc:count[6].ENA
rst => \main_porc:count[5].ENA
rst => \main_porc:count[4].ENA
rst => \main_porc:count[3].ENA
rst => \main_porc:count[2].ENA
rst => \main_porc:count[1].ENA
rst => \main_porc:count[0].ENA
sw => flipflops[0].DATAIN
output <= output~reg0.DB_MAX_OUTPUT_PORT_TYPE


